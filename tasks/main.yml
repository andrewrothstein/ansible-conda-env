---
- name: gather conda info
  command: "{{ conda_env_bin_dir }}/conda info --json"
  register: conda_info
  changed_when: False

- set_fact:
    conda_info: "{{ conda_info.stdout | from_json }}"

- name: mkdir env-ymls
  become: '{{ conda_env_escalate }}'
  become_user: root
  file:
    path: '{{ conda_env_env_ymls }}'
    state: directory
    mode: 0755

- name: injecting/templatizing environment.yml...
  become: '{{ conda_env_escalate }}'
  become_user: root
  template:
    src: '{{ conda_env_environment }}'
    dest: '{{ conda_env_fq_dest_environment }}'
    mode: 0644

- name: '{{ conda_env_action_command }} the conda environment'
  become: '{{ conda_env_escalate }}'
  become_user: root
  command: '{{ conda_env_bin_dir }}/conda env {{ conda_env_action_command }} -f={{ conda_env_fq_dest_environment }} -q -n {{ conda_env_name }}'
  args:
    # pretend task creates nothing to always run when updating an environment. In general, the first directory
    # is where conda creates new environments.
    creates: "{% if conda_env_action_command == 'update' %}{% else %}{{ conda_info.envs_dirs | first }}/{{ conda_env_name }}{% endif %}"

- name: addl packages...
  become: '{{ conda_env_escalate }}'
  become_user: root
  when: conda_env_addl_pkgs is defined
  with_items: '{{  conda_env_addl_pkgs | default([])  }}'
  command: '{{ conda_env_bin_dir }}/conda install -n {{ conda_env_name }} -yq -c {{  item.c | default("defaults")  }} {{  item.p  }}'

- name: cleanup
  become: '{{ conda_env_escalate }}'
  become_user: root
  when: conda_env_cleanup
  command: '{{ conda_env_bin_dir }}/conda clean -tipsyq'

- name: setting up to activate in login shell...
  become: '{{ conda_env_escalate }}'
  become_user: root
  when: conda_env_escalate and conda_env_activate_for_login_shell
  with_items:
    - d: /etc/profile.d
      f: conda-env-activate-{{ conda_env_name }}.sh
  template:
    src: activate.sh.j2
    dest: '{{ item.d }}/{{ item.f }}'
    mode: '{{ item.m|default("0644") }}'
